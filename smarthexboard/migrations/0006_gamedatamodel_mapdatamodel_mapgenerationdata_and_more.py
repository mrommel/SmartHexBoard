# Generated by Django 4.2.7 on 2023-11-10 19:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('smarthexboard', '0005_remove_playertech_valid_tech_identifier_player_human_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameDataModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('01995d86-7b19-4140-b248-a8b8fac869b3'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('turn', models.IntegerField(default=0)),
                ('handicap', models.CharField(choices=[('SE', 'Settler'), ('CH', 'Chieftain'), ('WA', 'Warlord'), ('PR', 'Prince'), ('KI', 'King'), ('EM', 'Emperor'), ('IM', 'Immortal'), ('DE', 'Deity')], default='SE', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='MapDataModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('370b35a5-ea00-4e5a-9e64-a97973587854'), editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500000)),
            ],
        ),
        migrations.CreateModel(
            name='MapGenerationData',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('5c930939-ddf0-4d0a-9021-f97106a85c4a'), editable=False, primary_key=True, serialize=False)),
                ('size', models.CharField(choices=[('DU', 'TXT_KEY_MAP_SIZE_DUEL_NAME'), ('TI', 'TXT_KEY_MAP_SIZE_TINY_NAME'), ('SM', 'TXT_KEY_MAP_SIZE_SMALL_NAME'), ('ST', 'TXT_KEY_MAP_SIZE_STANDARD_NAME')], default='DU', max_length=2)),
                ('map', models.CharField(max_length=500000)),
                ('state', models.CharField(choices=[('OP', 'Open'), ('RU', 'Running'), ('RE', 'Ready')], default='OP', max_length=2)),
            ],
        ),
        migrations.RemoveField(
            model_name='gamemodel',
            name='map',
        ),
        migrations.DeleteModel(
            name='MapGeneration',
        ),
        migrations.RemoveField(
            model_name='playertech',
            name='player',
        ),
        migrations.RenameModel(
            old_name='Player',
            new_name='PlayerModel',
        ),
        migrations.DeleteModel(
            name='GameModel',
        ),
        migrations.DeleteModel(
            name='MapModel',
        ),
        migrations.DeleteModel(
            name='PlayerTech',
        ),
        migrations.AddConstraint(
            model_name='mapgenerationdata',
            constraint=models.CheckConstraint(condition=models.Q(('state__in', ['OP', 'RU', 'RE'])), name='valid_state'),
        ),
        migrations.AddConstraint(
            model_name='mapgenerationdata',
            constraint=models.CheckConstraint(condition=models.Q(('size__in', ['DU', 'TI', 'SM', 'ST'])), name='valid_size'),
        ),
        migrations.AddField(
            model_name='gamedatamodel',
            name='map',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='smarthexboard.mapdatamodel'),
        ),
        migrations.AlterField(
            model_name='playermodel',
            name='game',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='smarthexboard.gamedatamodel'),
        ),
        migrations.AddConstraint(
            model_name='gamedatamodel',
            constraint=models.CheckConstraint(condition=models.Q(('handicap__in', ['SE', 'CH', 'WA', 'PR', 'KI', 'EM', 'IM', 'DE'])), name='valid_handicap'),
        ),
    ]
