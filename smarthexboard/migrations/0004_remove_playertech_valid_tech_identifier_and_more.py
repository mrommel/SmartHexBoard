# Generated by Django 4.1.6 on 2023-02-22 20:38

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('smarthexboard', '0003_alter_gamemodel_uuid_alter_mapgeneration_uuid_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='playertech',
            name='valid_tech_identifier',
        ),
        migrations.AddField(
            model_name='mapgeneration',
            name='size',
            field=models.CharField(choices=[('DU', 'TXT_KEY_MAP_SIZE_DUEL_NAME'), ('TI', 'TXT_KEY_MAP_SIZE_TINY_NAME'), ('SM', 'TXT_KEY_MAP_SIZE_SMALL_NAME'), ('ST', 'TXT_KEY_MAP_SIZE_STANDARD_NAME')], default='DU', max_length=2),
        ),
        migrations.AlterField(
            model_name='gamemodel',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('d29145e6-e2e8-4115-9b88-91ca7fc617a7'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='mapgeneration',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('73d91909-91b3-4f1a-b20e-cdba6daa1407'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='mapmodel',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('20c5c7d6-8eb9-426a-9731-a07d753b8b05'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='playertech',
            name='tech_identifier',
            field=models.CharField(choices=[('none', 'TXT_KEY_TECH_NONE'), ('mining', 'TXT_KEY_TECH_MINING_NAME'), ('pottery', 'TXT_KEY_TECH_POTTERY_NAME'), ('animalHusbandry', 'TXT_KEY_TECH_ANIMAL_HUSBANDRY_NAME'), ('sailing', 'TXT_KEY_TECH_SAILING_NAME'), ('astrology', 'TXT_KEY_TECH_ASTROLOGY_NAME'), ('irrigation', 'TXT_KEY_TECH_IRRIGATION_NAME'), ('writing', 'TXT_KEY_TECH_WRITING_NAME'), ('masonry', 'TXT_KEY_TECH_MASONRY_NAME'), ('archery', 'TXT_KEY_TECH_ARCHERY_NAME'), ('bronzeWorking', 'TXT_KEY_TECH_BRONZE_WORKING_NAME'), ('wheel', 'TXT_KEY_TECH_WHEEL_NAME'), ('celestialNavigation', 'TXT_KEY_TECH_CELESTIAL_NAVIGATION_NAME'), ('horsebackRiding', 'TXT_KEY_TECH_HORSEBACK_RIDING_NAME'), ('currency', 'TXT_KEY_TECH_CURRENCY_NAME'), ('construction', 'TXT_KEY_TECH_CONSTRUCTION_NAME'), ('ironWorking', 'TXT_KEY_TECH_IRON_WORKING_NAME'), ('shipBuilding', 'TXT_KEY_TECH_SHIP_BUILDING_NAME'), ('mathematics', 'TXT_KEY_TECH_MATHEMATICS_NAME'), ('engineering', 'TXT_KEY_TECH_ENGINEERING_NAME'), ('industrialization', 'TXT_KEY_TECH_INDUSTRIALIZATION_NAME'), ('refining', 'TXT_KEY_TECH_REFINING_NAME')], default=('none', 'TXT_KEY_TECH_NONE'), max_length=20),
        ),
        migrations.AddConstraint(
            model_name='mapgeneration',
            constraint=models.CheckConstraint(check=models.Q(('size__in', ['DU', 'TI', 'SM', 'ST'])), name='valid_size'),
        ),
        migrations.AddConstraint(
            model_name='playertech',
            constraint=models.CheckConstraint(check=models.Q(('tech_identifier__in', ('none', 'mining', 'pottery', 'animalHusbandry', 'sailing', 'astrology', 'irrigation', 'writing', 'masonry', 'archery', 'bronzeWorking', 'wheel', 'celestialNavigation', 'horsebackRiding', 'currency', 'construction', 'ironWorking', 'shipBuilding', 'mathematics', 'engineering', 'industrialization', 'refining'))), name='valid_tech_identifier'),
        ),
    ]
