# Generated by Django 4.1.6 on 2023-02-08 19:50

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('smarthexboard', '0002_gamemodel_mapmodel_alter_mapgeneration_uuid_player_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='gamemodel',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('37c0c161-8bac-43e1-86cb-83c759bac308'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='mapgeneration',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('ab3573fd-3817-49b1-aece-247dba529657'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='mapmodel',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('e8819c12-bc9f-40bd-9d72-a3fb2096f4c3'), editable=False, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='PlayerTech',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tech_identifier', models.CharField(choices=[('none', 'TXT_KEY_TECH_NONE'), ('mining', 'TXT_KEY_TECH_MINING_NAME'), ('pottery', 'TXT_KEY_TECH_POTTERY_NAME'), ('animalHusbandry', 'TXT_KEY_TECH_ANIMAL_HUSBANDRY_NAME'), ('sailing', 'TXT_KEY_TECH_SAILING_NAME'), ('astrology', 'TXT_KEY_TECH_ASTROLOGY_NAME'), ('irrigation', 'TXT_KEY_TECH_IRRIGATION_NAME'), ('writing', 'TXT_KEY_TECH_WRITING_NAME')], default=('none', 'TXT_KEY_TECH_NONE'), max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('eureka', models.BooleanField(default=False)),
                ('player', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='smarthexboard.player')),
            ],
        ),
        migrations.AddConstraint(
            model_name='playertech',
            constraint=models.CheckConstraint(condition=models.Q(('tech_identifier__in', ('none', 'mining', 'pottery', 'animalHusbandry', 'sailing', 'astrology', 'irrigation', 'writing'))), name='valid_tech_identifier'),
        ),
    ]
